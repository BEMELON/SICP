#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 73 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 9 #"D2Coding\0"
0 16 90 -1 90 -1 1 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 128 192 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 128 192 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 128 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 128 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 128 0 0 0 0 -1 -1
2 37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 128 0 0 0 0 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 128 64 0 0 0 0 -1 -1
2 49 #"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 128 64 0 0 0 0 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 9 #"D2Coding\0"
0.0 16 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 192 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"D2Coding\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 606 0 31 3 10 #"#lang sicp"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 9 #"#%require"
0 0 28 3 1 #" "
0 0 20 3 22 #"\"smallest-divisor.rkt\""
0 0 28 3 1 #" "
0 0 20 3 18 #"\"../util/util.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 9 #"#%require"
0 0 28 3 2 #" ("
0 0 14 3 3 #"lib"
0 0 28 3 1 #" "
0 0 20 3 7 #"\"27.ss\""
0 0 28 3 1 #" "
0 0 20 3 6 #"\"srfi\""
0 0 28 3 3 #")) "
0 0 18 3 25 #";; To use random-integer "
0 0 28 29 1 #"\n"
0 0 18 3 34 #";(define (smallest-divisor n term)"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 6 #"prime?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 16 #"smallest-divisor"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" ("
0 0 14 3 7 #"divisor"
0 0 28 3 3 #") ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 4 #"next"
0 0 28 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 11 #"fast-prime?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 16 #"smallest-divisor"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 4 #"next"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 9 #";; ex1.24"
0 0 28 29 1 #"\n"
0 0 18 3 37 #";; O(log N) , Fermat's Little Theorem"
0 0 28 29 1 #"\n"
0 0 18 3 140
(4
 #";; Fermat's Little  Theor"
 #"m : n \354\235\264 \354\206"
 #"\214\354\210\230\352\263\240, a\352\260"
 #"\200 n\353\263\264\353\213\244\353\212\224"
 #" \354\236\221\352\263\240 0\353\263\264"
 #"\353\213\244\353\212\224 \355\201\260 \354"
 #"\240\225\354\210\230\353\235\274\353\251\264, a^n % n  == "
 #"a % n \354\235\264\353\213\244.                 "
) 0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 13 #"fermat-prime?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 5 #"times"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 6 #"expmod"
0 0 28 3 1 #" "
0 0 14 3 4 #"base"
0 0 28 3 1 #" "
0 0 14 3 3 #"exp"
0 0 28 3 1 #" "
0 0 14 3 1 #"m"
0 0 28 3 2 #") "
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 14 3 3 #"exp"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 2 #") "
0 0 24 3 1 #"1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"          (("
0 0 14 3 5 #"even?"
0 0 28 3 1 #" "
0 0 14 3 3 #"exp"
0 0 28 3 3 #") ("
0 0 14 3 9 #"remainder"
0 0 28 3 2 #" ("
0 0 14 3 6 #"square"
0 0 28 3 2 #" ("
0 0 14 3 6 #"expmod"
0 0 28 3 1 #" "
0 0 14 3 4 #"base"
0 0 28 3 2 #" ("
0 0 14 3 1 #"/"
0 0 28 3 1 #" "
0 0 14 3 3 #"exp"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 2 #") "
0 0 14 3 1 #"m"
0 0 28 3 3 #")) "
0 0 14 3 1 #"m"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 28 3 2 #" ("
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 14 3 4 #"base"
0 0 28 3 2 #" ("
0 0 14 3 6 #"expmod"
0 0 28 3 1 #" "
0 0 14 3 4 #"base"
0 0 28 3 2 #" ("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 3 #"exp"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 2 #") "
0 0 14 3 1 #"m"
0 0 28 3 3 #")) "
0 0 14 3 1 #"m"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 11 #"fermat-test"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 6 #"try-it"
0 0 28 3 1 #" "
0 0 14 3 1 #"a"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 1 #"="
0 0 28 3 2 #" ("
0 0 14 3 6 #"expmod"
0 0 28 3 1 #" "
0 0 14 3 1 #"a"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #") "
0 0 14 3 1 #"a"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 14 3 6 #"try-it"
0 0 28 3 2 #" ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 2 #" ("
0 0 14 3 14 #"random-integer"
0 0 28 3 2 #" ("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 18 3 12 #";; statement"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 14 3 5 #"times"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 2 #") "
0 0 14 3 4 #"true"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        (("
0 0 14 3 11 #"fermat-test"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 3 #") ("
0 0 14 3 13 #"fermat-prime?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 5 #"times"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 14 3 5 #"false"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 24 #"fermat-search-for-primes"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 5 #"limit"
0 0 28 3 2 #"  "
0 0 14 3 5 #"times"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 5 #"limit"
0 0 28 3 3 #") ("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 10 #"\"\\nDONE\\n\""
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 16 #"timed-prime-test"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 5 #"times"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ("
0 0 14 3 24 #"fermat-search-for-primes"
0 0 28 3 2 #" ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #") "
0 0 14 3 5 #"limit"
0 0 28 3 1 #" "
0 0 14 3 5 #"times"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 16 #"timed-prime-test"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 5 #"times"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 23 #"fermat-start-prime-test"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 7 #"runtime"
0 0 28 3 2 #") "
0 0 14 3 5 #"times"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 31 #";; Display if N is Prime nubber"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 23 #"fermat-start-prime-test"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 10 #"start-time"
0 0 28 3 1 #" "
0 0 14 3 5 #"times"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 13 #"fermat-prime?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 5 #"times"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"          ("
0 0 16 3 5 #"begin"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"            ("
0 0 14 3 7 #"newline"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"            ("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"            ("
0 0 14 3 12 #"report-prime"
0 0 28 3 2 #" ("
0 0 14 3 1 #"-"
0 0 28 3 2 #" ("
0 0 14 3 7 #"runtime"
0 0 28 3 2 #") "
0 0 14 3 10 #"start-time"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 23 #";; Time Checking method"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 12 #"report-prime"
0 0 28 3 1 #" "
0 0 14 3 12 #"elapsed-time"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 7 #"\" *** \""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 14 3 12 #"elapsed-time"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 22 #"\"*** NORMAL PRIME ***\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 17 #"search-for-primes"
0 0 28 3 1 #" "
0 0 24 3 12 #"100000000000"
0 0 28 3 1 #" "
0 0 24 3 12 #"100000000060"
0 0 28 3 1 #" "
0 0 14 3 6 #"prime?"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 20 #"\"*** FAST PIRME ***\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 17 #"search-for-primes"
0 0 28 3 1 #" "
0 0 24 3 12 #"100000000000"
0 0 28 3 1 #" "
0 0 24 3 12 #"100000000060"
0 0 28 3 1 #" "
0 0 14 3 11 #"fast-prime?"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 22 #"\"*** Fermat PRIME ***\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 24 #"fermat-search-for-primes"
0 0 28 3 1 #" "
0 0 24 3 12 #"100000000000"
0 0 28 3 1 #" "
0 0 24 3 12 #"100000000060"
0 0 28 3 1 #" "
0 0 24 3 3 #"200"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 9 #";; ex1.27"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 44 #"\"*** Carmichael number with fermat-test ***\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 23 #"fermat-start-prime-test"
0 0 28 3 1 #" "
0 0 24 3 3 #"561"
0 0 28 3 2 #" ("
0 0 14 3 7 #"runtime"
0 0 28 3 2 #") "
0 0 24 3 3 #"100"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 23 #"fermat-start-prime-test"
0 0 28 3 1 #" "
0 0 24 3 4 #"1105"
0 0 28 3 2 #" ("
0 0 14 3 7 #"runtime"
0 0 28 3 2 #") "
0 0 24 3 3 #"100"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 23 #"fermat-start-prime-test"
0 0 28 3 1 #" "
0 0 24 3 4 #"1729"
0 0 28 3 2 #" ("
0 0 14 3 7 #"runtime"
0 0 28 3 2 #") "
0 0 24 3 3 #"100"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 23 #"fermat-start-prime-test"
0 0 28 3 1 #" "
0 0 24 3 4 #"2465"
0 0 28 3 2 #" ("
0 0 14 3 7 #"runtime"
0 0 28 3 2 #") "
0 0 24 3 3 #"100"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 23 #"fermat-start-prime-test"
0 0 28 3 1 #" "
0 0 24 3 4 #"2821"
0 0 28 3 2 #" ("
0 0 14 3 7 #"runtime"
0 0 28 3 2 #") "
0 0 24 3 3 #"100"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 16 #"\" *** Fin ***\\n\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 3 #"***"
0 0 20 3 1 #" "
0 0 20 3 10 #"Carmichael"
0 0 20 3 1 #" "
0 0 20 3 6 #"number"
0 0 20 3 1 #" "
0 0 20 3 5 #"with "
0 0 20 3 5 #"prime"
0 0 20 3 1 #" "
0 0 20 3 13 #"number ***\\n\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 11 #"fast-prime?"
0 0 28 3 1 #" "
0 0 24 3 3 #"561"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 11 #"fast-prime?"
0 0 28 3 1 #" "
0 0 24 3 4 #"1105"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 11 #"fast-prime?"
0 0 28 3 1 #" "
0 0 24 3 4 #"1729"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 11 #"fast-prime?"
0 0 28 3 1 #" "
0 0 24 3 4 #"2465"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 11 #"fast-prime?"
0 0 28 3 1 #" "
0 0 24 3 4 #"2821"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 1 #" "
0 0 20 3 3 #"***"
0 0 20 3 1 #" "
0 0 20 3 8 #"Fin ***\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 9         679 24           0 0           0 112 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 14 3 6 #"NORMAL"
0 0 28 3 1 #" "
0 0 14 3 5 #"PRIME"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000003"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 5 #"46891"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000019"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 5 #"31241"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000057"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 5 #"15621"
0 0 28 29 1 #"\n"
0 0 14 3 4 #"DONE"
0 0 28 29 1 #"\n"
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 14 3 4 #"FAST"
0 0 28 3 1 #" "
0 0 14 3 5 #"PIRME"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000003"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 5 #"15621"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000019"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 5 #"15622"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000057"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 5 #"15621"
0 0 28 29 1 #"\n"
0 0 14 3 4 #"DONE"
0 0 28 29 1 #"\n"
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 14 3 6 #"Fermat"
0 0 28 3 1 #" "
0 0 14 3 5 #"PRIME"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000003"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 14 #"15.64892578125"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000019"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 15 #"31.246337890625"
0 0 28 29 1 #"\n"
0 0 24 3 12 #"100000000057"
0 0 28 3 1 #" "
0 0 14 3 3 #"***"
0 0 28 3 1 #" "
0 0 24 3 3 #"0.0"
0 0 28 29 1 #"\n"
0 0 14 3 4 #"DONE"
0 0 28 29 1 #"\n"
0 0 14 3 6 #"NORMAL"
0 0 28 3 1 #" "
0 0 14 3 5 #"PRIME"
0 0 28 3 1 #" "
0 0 14 3 2 #"->"
0 0 28 3 1 #" "
0 0 14 3 4 #"FAST"
0 0 28 3 1 #" "
0 0 14 3 5 #"PRIME"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"2\353\260\260"
0 0 28 29 1 #"\n"
0 0 14 3 2 #"=>"
0 0 28 3 1 #" "
0 0 14 3 6 #"\352\260\222\354\235\264"
0 0 28 3 1 #" "
0 0 14 3 6 #"\354\204\234\353\241\234"
0 0 28 3 1 #" "
0 0 14 3 9 #"\354\260\250\354\235\264\352\260\200"
0 0 28 3 1 #" "
0 0 14 3 4 #"\355\201\274."
0 0 28 3 1 #" "
0 0 14 3 12 #"\355\217\211\352\267\240\353\202\264\354\204\234"
0 0 28 3 1 #" "
0 0 14 3 25
(5
 #"\354\270\241\354\240\225\353\213\244\354\213\234"
 #"\355\225\264\353\264\220\354\225\274\355\225\250."
) 0 0 28 29 1 #"\n"
0           0 0           0
